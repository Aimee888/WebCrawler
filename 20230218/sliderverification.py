#!/usr/bin/env python
# _*_ coding: UTF-8 _*_
"""=================================================
@Project -> File    : 20230218 -> sliderverification.py
@IDE     : PyCharm
@Author  : Aimee
@Date    : 2023/3/1 13:45
@Desc    :https://coinmarketcap.com/account/my-diamonds/需要VPN
================================================="""
import json
import requests


def main():
    # url_getCaptcha = "https://api.commonservice.io/gateway-api/v1/public/antibot/getCaptcha"
    # data_getCaptcha = {
    #     "bizId":"CMC_login&sv=20220812&lang=en&securityCheckResponseValidateId=94012bcf0b304223ab6ff6e789008d23&clientType=web"
    # }
    # data_getCaptcha_json = json.dumps(data_getCaptcha)
    # response = requests.post(url_getCaptcha, data_getCaptcha_json)
    # print(response.text)

    headers = {
        "user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36",
        "content-type":"text/plain; charset=UTF-8",
        "device-info":"eyJzY3JlZW5fcmVzb2x1dGlvbiI6IjE5MjAsMTA4MCIsImF2YWlsYWJsZV9zY3JlZW5fcmVzb2x1dGlvbiI6IjE5MjAsMTAzMiIsInN5c3RlbV92ZXJzaW9uIjoidW5rbm93biIsImJyYW5kX21vZGVsIjoidW5rbm93biIsInRpbWV6b25lIjoiQXNpYS9TaGFuZ2hhaSIsInRpbWV6b25lT2Zmc2V0IjotNDgwLCJ1c2VyX2FnZW50IjoiTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzk4LjAuNDc1OC4xMDIgU2FmYXJpLzUzNy4zNiIsImxpc3RfcGx1Z2luIjoiUERGIFZpZXdlcixDaHJvbWUgUERGIFZpZXdlcixDaHJvbWl1bSBQREYgVmlld2VyLE1pY3Jvc29mdCBFZGdlIFBERiBWaWV3ZXIsV2ViS2l0IGJ1aWx0LWluIFBERiIsInBsYXRmb3JtIjoiV2luMzIiLCJ3ZWJnbF92ZW5kb3IiOiJ1bmtub3duIiwid2ViZ2xfcmVuZGVyZXIiOiJ1bmtub3duIn0=",
        "referer":"https://coinmarketcap.com/",
        "origin":"https://coinmarketcap.com",
    }
    url_validateCaptcha = "https://api.commonservice.io/gateway-api/v1/public/antibot/validateCaptcha"
    data_validateCaptcha = {
        "bizId": "CMC_login&sv=20220812&lang=en&securityCheckResponseValidateId=94012bcf0b304223ab6ff6e789008d23&clientType=web&sig=LSpUEospHleE6gYsmUXuS92bSgX7mQQqXo9jT8DI2RJPJLEi&data=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&s=374958"
    }
    data_validateCaptcha_json = json.dumps(data_validateCaptcha)
    response = requests.post(url_validateCaptcha, data_validateCaptcha_json, headers=headers)
    print(response.content)





if __name__ == '__main__':
    main()
